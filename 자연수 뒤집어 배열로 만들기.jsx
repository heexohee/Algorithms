//sh
function solution(n) {
    return n.toString().split('').reverse().map(str => Number(str));
    
    // 자연수를 배열(문자열)로 만들어서 인덱스를 가지도록함.-> toString 사용
    // split('')로 쪼갠다.
    // reverse()로 배열을 역순으로 만든다.
    // map으로 배열의 str 요소를 하나씩 가져와서 처리, 새로운 배열을 만들어서 반환. 
    // 이 단계에서 ["5","4","3","2","1"]
    // Number(str)를 적용하면 숫자도 된 배열 [5, 4, 3, 2, 1]이 생성됨.
    // 이 배열은 문자열이 아닌 숫자로 이루어져 있어야 하니까 Number쓴 것!
}
    // n.sort((a,b)=>b-a);
    // consolo.log(n)


// 타인 풀이
function solution(n) {
    // 숫자풀이
    var arr = [];

    do {
        arr.push(n%10);
        n = Math.floor(n/10);
    } while (n>0);

    return arr;
}

// do { ... } while (n > 0);: 이 부분은 반복문으로, 조건을 만족하는 동안 계속해서 실행됩니다. 
// 이 조건은 n이 0보다 큰 동안입니다. 즉, n이 양수인 동안 계속해서 아래의 코드 블록을 실행합니다.
// arr.push(n % 10);: 현재의 n 값을 10으로 나눈 나머지(n % 10)를 배열 arr에 추가합니다. 이 작업은 n의 일의 자릿수를 배열에 추가하는 역할을 합니다.
// n = Math.floor(n / 10);: n 값을 10으로 나눈 몫(n / 10)을 새로운 n 값으로 업데이트합니다. 이렇게 하면 다음 자릿수를 처리할 수 있습니다. Math.floor 함수를 사용하여 소수 부분을 버립니다. 예를 들어, n이 1234라면 이 작업을 통해 n은 123이 됩니다.
// 반복문이 종료되면, n이 0보다 작거나 같아지면서, 모든 자릿수가 배열 arr에 역순으로 저장됩니다.
// return arr;: 최종적으로 모든 자릿수가 역순으로 저장된 배열 arr을 반환합니다. 이 배열은 입력 정수 n의 각 자릿수를 포함하고 있습니다.
